//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-28540450
// Cuda compilation tools, release 11.0, V11.0.194
// Based on LLVM 3.4svn
//

.version 7.0
.target sm_70
.address_size 64

	// .globl	_Z17convertFp32ToFp16P6__halfPfi

.visible .entry _Z17convertFp32ToFp16P6__halfPfi(
	.param .u64 _Z17convertFp32ToFp16P6__halfPfi_param_0,
	.param .u64 _Z17convertFp32ToFp16P6__halfPfi_param_1,
	.param .u32 _Z17convertFp32ToFp16P6__halfPfi_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b16 	%rs<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_Z17convertFp32ToFp16P6__halfPfi_param_0];
	ld.param.u64 	%rd2, [_Z17convertFp32ToFp16P6__halfPfi_param_1];
	ld.param.u32 	%r2, [_Z17convertFp32ToFp16P6__halfPfi_param_2];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB0_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	// inline asm
	{  cvt.rn.f16.f32 %rs1, %f1;}

	// inline asm
	cvta.to.global.u64 	%rd6, %rd1;
	mul.wide.s32 	%rd7, %r1, 2;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.u16 	[%rd8], %rs1;

BB0_2:
	ret;
}

	// .globl	_Z12PowerKernal1PK6__halfS1_PS_i
.visible .entry _Z12PowerKernal1PK6__halfS1_PS_i(
	.param .u64 _Z12PowerKernal1PK6__halfS1_PS_i_param_0,
	.param .u64 _Z12PowerKernal1PK6__halfS1_PS_i_param_1,
	.param .u64 _Z12PowerKernal1PK6__halfS1_PS_i_param_2,
	.param .u32 _Z12PowerKernal1PK6__halfS1_PS_i_param_3
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<1833>;
	.reg .b32 	%r<24>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd6, [_Z12PowerKernal1PK6__halfS1_PS_i_param_0];
	ld.param.u64 	%rd7, [_Z12PowerKernal1PK6__halfS1_PS_i_param_1];
	ld.param.u64 	%rd5, [_Z12PowerKernal1PK6__halfS1_PS_i_param_2];
	ld.param.u32 	%r11, [_Z12PowerKernal1PK6__halfS1_PS_i_param_3];
	cvta.to.global.u64 	%rd8, %rd7;
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %ntid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r13, %r14, %r15;
	mov.u32 	%r22, 0;
	// inline asm
	cvt.rn.f16.s32 %rs3, %r22;
	// inline asm
	mov.u16 	%rs1827, %rs3;
	mov.u16 	%rs1830, %rs3;
	mov.u16 	%rs1828, %rs3;
	mov.u16 	%rs1831, %rs3;
	cvta.to.global.u64 	%rd13, %rd6;
	mul.wide.s32 	%rd14, %r1, 2;
	add.s64 	%rd15, %rd13, %rd14;
	ld.global.u16 	%rs4, [%rd15];
	mov.u16 	%rs1829, %rs4;
	add.s64 	%rd18, %rd8, %rd14;
	ld.global.u16 	%rs5, [%rd18];
	mov.u16 	%rs1832, %rs5;
	setp.lt.s32	%p1, %r11, 1;
	@%p1 bra 	BB1_7;

	mov.u16 	%rs1, %rs1829;
	mov.u16 	%rs2, %rs1832;
	mul.hi.s32 	%r17, %r11, 1374389535;
	shr.u32 	%r18, %r17, 31;
	shr.s32 	%r19, %r17, 5;
	add.s32 	%r20, %r19, %r18;
	mul.lo.s32 	%r3, %r20, 100;
	sub.s32 	%r2, %r11, %r3;
	setp.lt.s32	%p2, %r3, 1;
	@%p2 bra 	BB1_5;

	sub.s32 	%r21, %r2, %r11;
	// inline asm
	{add.f16 %rs6,%rs1,%rs2;
}
	// inline asm
	// inline asm
	{sub.f16 %rs9,%rs1,%rs2;
}
	// inline asm

BB1_3:
	.pragma "nounroll";
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs13, %rs1827;
	mov.u16 	%rs14, %rs1830;
	// inline asm
	{add.f16 %rs12,%rs13,%rs14;
}
	// inline asm
	mov.u16 	%rs1827, %rs12;
	mov.u16 	%rs17, %rs1830;
	// inline asm
	{add.f16 %rs15,%rs12,%rs17;
}
	// inline asm
	mov.u16 	%rs1827, %rs15;
	mov.u16 	%rs19, %rs1828;
	// inline asm
	{sub.f16 %rs18,%rs19,%rs15;
}
	// inline asm
	mov.u16 	%rs1830, %rs18;
	mov.u16 	%rs23, %rs1828;
	// inline asm
	{add.f16 %rs21,%rs18,%rs23;
}
	// inline asm
	mov.u16 	%rs1827, %rs21;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs31, %rs1827;
	mov.u16 	%rs32, %rs1830;
	// inline asm
	{add.f16 %rs30,%rs31,%rs32;
}
	// inline asm
	mov.u16 	%rs1827, %rs30;
	mov.u16 	%rs35, %rs1830;
	// inline asm
	{add.f16 %rs33,%rs30,%rs35;
}
	// inline asm
	mov.u16 	%rs1827, %rs33;
	mov.u16 	%rs37, %rs1828;
	// inline asm
	{sub.f16 %rs36,%rs37,%rs33;
}
	// inline asm
	mov.u16 	%rs1830, %rs36;
	mov.u16 	%rs41, %rs1828;
	// inline asm
	{add.f16 %rs39,%rs36,%rs41;
}
	// inline asm
	mov.u16 	%rs1827, %rs39;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs49, %rs1827;
	mov.u16 	%rs50, %rs1830;
	// inline asm
	{add.f16 %rs48,%rs49,%rs50;
}
	// inline asm
	mov.u16 	%rs1827, %rs48;
	mov.u16 	%rs53, %rs1830;
	// inline asm
	{add.f16 %rs51,%rs48,%rs53;
}
	// inline asm
	mov.u16 	%rs1827, %rs51;
	mov.u16 	%rs55, %rs1828;
	// inline asm
	{sub.f16 %rs54,%rs55,%rs51;
}
	// inline asm
	mov.u16 	%rs1830, %rs54;
	mov.u16 	%rs59, %rs1828;
	// inline asm
	{add.f16 %rs57,%rs54,%rs59;
}
	// inline asm
	mov.u16 	%rs1827, %rs57;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs67, %rs1827;
	mov.u16 	%rs68, %rs1830;
	// inline asm
	{add.f16 %rs66,%rs67,%rs68;
}
	// inline asm
	mov.u16 	%rs1827, %rs66;
	mov.u16 	%rs71, %rs1830;
	// inline asm
	{add.f16 %rs69,%rs66,%rs71;
}
	// inline asm
	mov.u16 	%rs1827, %rs69;
	mov.u16 	%rs73, %rs1828;
	// inline asm
	{sub.f16 %rs72,%rs73,%rs69;
}
	// inline asm
	mov.u16 	%rs1830, %rs72;
	mov.u16 	%rs77, %rs1828;
	// inline asm
	{add.f16 %rs75,%rs72,%rs77;
}
	// inline asm
	mov.u16 	%rs1827, %rs75;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs85, %rs1827;
	mov.u16 	%rs86, %rs1830;
	// inline asm
	{add.f16 %rs84,%rs85,%rs86;
}
	// inline asm
	mov.u16 	%rs1827, %rs84;
	mov.u16 	%rs89, %rs1830;
	// inline asm
	{add.f16 %rs87,%rs84,%rs89;
}
	// inline asm
	mov.u16 	%rs1827, %rs87;
	mov.u16 	%rs91, %rs1828;
	// inline asm
	{sub.f16 %rs90,%rs91,%rs87;
}
	// inline asm
	mov.u16 	%rs1830, %rs90;
	mov.u16 	%rs95, %rs1828;
	// inline asm
	{add.f16 %rs93,%rs90,%rs95;
}
	// inline asm
	mov.u16 	%rs1827, %rs93;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs103, %rs1827;
	mov.u16 	%rs104, %rs1830;
	// inline asm
	{add.f16 %rs102,%rs103,%rs104;
}
	// inline asm
	mov.u16 	%rs1827, %rs102;
	mov.u16 	%rs107, %rs1830;
	// inline asm
	{add.f16 %rs105,%rs102,%rs107;
}
	// inline asm
	mov.u16 	%rs1827, %rs105;
	mov.u16 	%rs109, %rs1828;
	// inline asm
	{sub.f16 %rs108,%rs109,%rs105;
}
	// inline asm
	mov.u16 	%rs1830, %rs108;
	mov.u16 	%rs113, %rs1828;
	// inline asm
	{add.f16 %rs111,%rs108,%rs113;
}
	// inline asm
	mov.u16 	%rs1827, %rs111;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs121, %rs1827;
	mov.u16 	%rs122, %rs1830;
	// inline asm
	{add.f16 %rs120,%rs121,%rs122;
}
	// inline asm
	mov.u16 	%rs1827, %rs120;
	mov.u16 	%rs125, %rs1830;
	// inline asm
	{add.f16 %rs123,%rs120,%rs125;
}
	// inline asm
	mov.u16 	%rs1827, %rs123;
	mov.u16 	%rs127, %rs1828;
	// inline asm
	{sub.f16 %rs126,%rs127,%rs123;
}
	// inline asm
	mov.u16 	%rs1830, %rs126;
	mov.u16 	%rs131, %rs1828;
	// inline asm
	{add.f16 %rs129,%rs126,%rs131;
}
	// inline asm
	mov.u16 	%rs1827, %rs129;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs139, %rs1827;
	mov.u16 	%rs140, %rs1830;
	// inline asm
	{add.f16 %rs138,%rs139,%rs140;
}
	// inline asm
	mov.u16 	%rs1827, %rs138;
	mov.u16 	%rs143, %rs1830;
	// inline asm
	{add.f16 %rs141,%rs138,%rs143;
}
	// inline asm
	mov.u16 	%rs1827, %rs141;
	mov.u16 	%rs145, %rs1828;
	// inline asm
	{sub.f16 %rs144,%rs145,%rs141;
}
	// inline asm
	mov.u16 	%rs1830, %rs144;
	mov.u16 	%rs149, %rs1828;
	// inline asm
	{add.f16 %rs147,%rs144,%rs149;
}
	// inline asm
	mov.u16 	%rs1827, %rs147;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs157, %rs1827;
	mov.u16 	%rs158, %rs1830;
	// inline asm
	{add.f16 %rs156,%rs157,%rs158;
}
	// inline asm
	mov.u16 	%rs1827, %rs156;
	mov.u16 	%rs161, %rs1830;
	// inline asm
	{add.f16 %rs159,%rs156,%rs161;
}
	// inline asm
	mov.u16 	%rs1827, %rs159;
	mov.u16 	%rs163, %rs1828;
	// inline asm
	{sub.f16 %rs162,%rs163,%rs159;
}
	// inline asm
	mov.u16 	%rs1830, %rs162;
	mov.u16 	%rs167, %rs1828;
	// inline asm
	{add.f16 %rs165,%rs162,%rs167;
}
	// inline asm
	mov.u16 	%rs1827, %rs165;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs175, %rs1827;
	mov.u16 	%rs176, %rs1830;
	// inline asm
	{add.f16 %rs174,%rs175,%rs176;
}
	// inline asm
	mov.u16 	%rs1827, %rs174;
	mov.u16 	%rs179, %rs1830;
	// inline asm
	{add.f16 %rs177,%rs174,%rs179;
}
	// inline asm
	mov.u16 	%rs1827, %rs177;
	mov.u16 	%rs181, %rs1828;
	// inline asm
	{sub.f16 %rs180,%rs181,%rs177;
}
	// inline asm
	mov.u16 	%rs1830, %rs180;
	mov.u16 	%rs185, %rs1828;
	// inline asm
	{add.f16 %rs183,%rs180,%rs185;
}
	// inline asm
	mov.u16 	%rs1827, %rs183;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs193, %rs1827;
	mov.u16 	%rs194, %rs1830;
	// inline asm
	{add.f16 %rs192,%rs193,%rs194;
}
	// inline asm
	mov.u16 	%rs1827, %rs192;
	mov.u16 	%rs197, %rs1830;
	// inline asm
	{add.f16 %rs195,%rs192,%rs197;
}
	// inline asm
	mov.u16 	%rs1827, %rs195;
	mov.u16 	%rs199, %rs1828;
	// inline asm
	{sub.f16 %rs198,%rs199,%rs195;
}
	// inline asm
	mov.u16 	%rs1830, %rs198;
	mov.u16 	%rs203, %rs1828;
	// inline asm
	{add.f16 %rs201,%rs198,%rs203;
}
	// inline asm
	mov.u16 	%rs1827, %rs201;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs211, %rs1827;
	mov.u16 	%rs212, %rs1830;
	// inline asm
	{add.f16 %rs210,%rs211,%rs212;
}
	// inline asm
	mov.u16 	%rs1827, %rs210;
	mov.u16 	%rs215, %rs1830;
	// inline asm
	{add.f16 %rs213,%rs210,%rs215;
}
	// inline asm
	mov.u16 	%rs1827, %rs213;
	mov.u16 	%rs217, %rs1828;
	// inline asm
	{sub.f16 %rs216,%rs217,%rs213;
}
	// inline asm
	mov.u16 	%rs1830, %rs216;
	mov.u16 	%rs221, %rs1828;
	// inline asm
	{add.f16 %rs219,%rs216,%rs221;
}
	// inline asm
	mov.u16 	%rs1827, %rs219;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs229, %rs1827;
	mov.u16 	%rs230, %rs1830;
	// inline asm
	{add.f16 %rs228,%rs229,%rs230;
}
	// inline asm
	mov.u16 	%rs1827, %rs228;
	mov.u16 	%rs233, %rs1830;
	// inline asm
	{add.f16 %rs231,%rs228,%rs233;
}
	// inline asm
	mov.u16 	%rs1827, %rs231;
	mov.u16 	%rs235, %rs1828;
	// inline asm
	{sub.f16 %rs234,%rs235,%rs231;
}
	// inline asm
	mov.u16 	%rs1830, %rs234;
	mov.u16 	%rs239, %rs1828;
	// inline asm
	{add.f16 %rs237,%rs234,%rs239;
}
	// inline asm
	mov.u16 	%rs1827, %rs237;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs247, %rs1827;
	mov.u16 	%rs248, %rs1830;
	// inline asm
	{add.f16 %rs246,%rs247,%rs248;
}
	// inline asm
	mov.u16 	%rs1827, %rs246;
	mov.u16 	%rs251, %rs1830;
	// inline asm
	{add.f16 %rs249,%rs246,%rs251;
}
	// inline asm
	mov.u16 	%rs1827, %rs249;
	mov.u16 	%rs253, %rs1828;
	// inline asm
	{sub.f16 %rs252,%rs253,%rs249;
}
	// inline asm
	mov.u16 	%rs1830, %rs252;
	mov.u16 	%rs257, %rs1828;
	// inline asm
	{add.f16 %rs255,%rs252,%rs257;
}
	// inline asm
	mov.u16 	%rs1827, %rs255;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs265, %rs1827;
	mov.u16 	%rs266, %rs1830;
	// inline asm
	{add.f16 %rs264,%rs265,%rs266;
}
	// inline asm
	mov.u16 	%rs1827, %rs264;
	mov.u16 	%rs269, %rs1830;
	// inline asm
	{add.f16 %rs267,%rs264,%rs269;
}
	// inline asm
	mov.u16 	%rs1827, %rs267;
	mov.u16 	%rs271, %rs1828;
	// inline asm
	{sub.f16 %rs270,%rs271,%rs267;
}
	// inline asm
	mov.u16 	%rs1830, %rs270;
	mov.u16 	%rs275, %rs1828;
	// inline asm
	{add.f16 %rs273,%rs270,%rs275;
}
	// inline asm
	mov.u16 	%rs1827, %rs273;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs283, %rs1827;
	mov.u16 	%rs284, %rs1830;
	// inline asm
	{add.f16 %rs282,%rs283,%rs284;
}
	// inline asm
	mov.u16 	%rs1827, %rs282;
	mov.u16 	%rs287, %rs1830;
	// inline asm
	{add.f16 %rs285,%rs282,%rs287;
}
	// inline asm
	mov.u16 	%rs1827, %rs285;
	mov.u16 	%rs289, %rs1828;
	// inline asm
	{sub.f16 %rs288,%rs289,%rs285;
}
	// inline asm
	mov.u16 	%rs1830, %rs288;
	mov.u16 	%rs293, %rs1828;
	// inline asm
	{add.f16 %rs291,%rs288,%rs293;
}
	// inline asm
	mov.u16 	%rs1827, %rs291;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs301, %rs1827;
	mov.u16 	%rs302, %rs1830;
	// inline asm
	{add.f16 %rs300,%rs301,%rs302;
}
	// inline asm
	mov.u16 	%rs1827, %rs300;
	mov.u16 	%rs305, %rs1830;
	// inline asm
	{add.f16 %rs303,%rs300,%rs305;
}
	// inline asm
	mov.u16 	%rs1827, %rs303;
	mov.u16 	%rs307, %rs1828;
	// inline asm
	{sub.f16 %rs306,%rs307,%rs303;
}
	// inline asm
	mov.u16 	%rs1830, %rs306;
	mov.u16 	%rs311, %rs1828;
	// inline asm
	{add.f16 %rs309,%rs306,%rs311;
}
	// inline asm
	mov.u16 	%rs1827, %rs309;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs319, %rs1827;
	mov.u16 	%rs320, %rs1830;
	// inline asm
	{add.f16 %rs318,%rs319,%rs320;
}
	// inline asm
	mov.u16 	%rs1827, %rs318;
	mov.u16 	%rs323, %rs1830;
	// inline asm
	{add.f16 %rs321,%rs318,%rs323;
}
	// inline asm
	mov.u16 	%rs1827, %rs321;
	mov.u16 	%rs325, %rs1828;
	// inline asm
	{sub.f16 %rs324,%rs325,%rs321;
}
	// inline asm
	mov.u16 	%rs1830, %rs324;
	mov.u16 	%rs329, %rs1828;
	// inline asm
	{add.f16 %rs327,%rs324,%rs329;
}
	// inline asm
	mov.u16 	%rs1827, %rs327;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs337, %rs1827;
	mov.u16 	%rs338, %rs1830;
	// inline asm
	{add.f16 %rs336,%rs337,%rs338;
}
	// inline asm
	mov.u16 	%rs1827, %rs336;
	mov.u16 	%rs341, %rs1830;
	// inline asm
	{add.f16 %rs339,%rs336,%rs341;
}
	// inline asm
	mov.u16 	%rs1827, %rs339;
	mov.u16 	%rs343, %rs1828;
	// inline asm
	{sub.f16 %rs342,%rs343,%rs339;
}
	// inline asm
	mov.u16 	%rs1830, %rs342;
	mov.u16 	%rs347, %rs1828;
	// inline asm
	{add.f16 %rs345,%rs342,%rs347;
}
	// inline asm
	mov.u16 	%rs1827, %rs345;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs355, %rs1827;
	mov.u16 	%rs356, %rs1830;
	// inline asm
	{add.f16 %rs354,%rs355,%rs356;
}
	// inline asm
	mov.u16 	%rs1827, %rs354;
	mov.u16 	%rs359, %rs1830;
	// inline asm
	{add.f16 %rs357,%rs354,%rs359;
}
	// inline asm
	mov.u16 	%rs1827, %rs357;
	mov.u16 	%rs361, %rs1828;
	// inline asm
	{sub.f16 %rs360,%rs361,%rs357;
}
	// inline asm
	mov.u16 	%rs1830, %rs360;
	mov.u16 	%rs365, %rs1828;
	// inline asm
	{add.f16 %rs363,%rs360,%rs365;
}
	// inline asm
	mov.u16 	%rs1827, %rs363;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs373, %rs1827;
	mov.u16 	%rs374, %rs1830;
	// inline asm
	{add.f16 %rs372,%rs373,%rs374;
}
	// inline asm
	mov.u16 	%rs1827, %rs372;
	mov.u16 	%rs377, %rs1830;
	// inline asm
	{add.f16 %rs375,%rs372,%rs377;
}
	// inline asm
	mov.u16 	%rs1827, %rs375;
	mov.u16 	%rs379, %rs1828;
	// inline asm
	{sub.f16 %rs378,%rs379,%rs375;
}
	// inline asm
	mov.u16 	%rs1830, %rs378;
	mov.u16 	%rs383, %rs1828;
	// inline asm
	{add.f16 %rs381,%rs378,%rs383;
}
	// inline asm
	mov.u16 	%rs1827, %rs381;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs391, %rs1827;
	mov.u16 	%rs392, %rs1830;
	// inline asm
	{add.f16 %rs390,%rs391,%rs392;
}
	// inline asm
	mov.u16 	%rs1827, %rs390;
	mov.u16 	%rs395, %rs1830;
	// inline asm
	{add.f16 %rs393,%rs390,%rs395;
}
	// inline asm
	mov.u16 	%rs1827, %rs393;
	mov.u16 	%rs397, %rs1828;
	// inline asm
	{sub.f16 %rs396,%rs397,%rs393;
}
	// inline asm
	mov.u16 	%rs1830, %rs396;
	mov.u16 	%rs401, %rs1828;
	// inline asm
	{add.f16 %rs399,%rs396,%rs401;
}
	// inline asm
	mov.u16 	%rs1827, %rs399;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs409, %rs1827;
	mov.u16 	%rs410, %rs1830;
	// inline asm
	{add.f16 %rs408,%rs409,%rs410;
}
	// inline asm
	mov.u16 	%rs1827, %rs408;
	mov.u16 	%rs413, %rs1830;
	// inline asm
	{add.f16 %rs411,%rs408,%rs413;
}
	// inline asm
	mov.u16 	%rs1827, %rs411;
	mov.u16 	%rs415, %rs1828;
	// inline asm
	{sub.f16 %rs414,%rs415,%rs411;
}
	// inline asm
	mov.u16 	%rs1830, %rs414;
	mov.u16 	%rs419, %rs1828;
	// inline asm
	{add.f16 %rs417,%rs414,%rs419;
}
	// inline asm
	mov.u16 	%rs1827, %rs417;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs427, %rs1827;
	mov.u16 	%rs428, %rs1830;
	// inline asm
	{add.f16 %rs426,%rs427,%rs428;
}
	// inline asm
	mov.u16 	%rs1827, %rs426;
	mov.u16 	%rs431, %rs1830;
	// inline asm
	{add.f16 %rs429,%rs426,%rs431;
}
	// inline asm
	mov.u16 	%rs1827, %rs429;
	mov.u16 	%rs433, %rs1828;
	// inline asm
	{sub.f16 %rs432,%rs433,%rs429;
}
	// inline asm
	mov.u16 	%rs1830, %rs432;
	mov.u16 	%rs437, %rs1828;
	// inline asm
	{add.f16 %rs435,%rs432,%rs437;
}
	// inline asm
	mov.u16 	%rs1827, %rs435;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs445, %rs1827;
	mov.u16 	%rs446, %rs1830;
	// inline asm
	{add.f16 %rs444,%rs445,%rs446;
}
	// inline asm
	mov.u16 	%rs1827, %rs444;
	mov.u16 	%rs449, %rs1830;
	// inline asm
	{add.f16 %rs447,%rs444,%rs449;
}
	// inline asm
	mov.u16 	%rs1827, %rs447;
	mov.u16 	%rs451, %rs1828;
	// inline asm
	{sub.f16 %rs450,%rs451,%rs447;
}
	// inline asm
	mov.u16 	%rs1830, %rs450;
	mov.u16 	%rs455, %rs1828;
	// inline asm
	{add.f16 %rs453,%rs450,%rs455;
}
	// inline asm
	mov.u16 	%rs1827, %rs453;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs463, %rs1827;
	mov.u16 	%rs464, %rs1830;
	// inline asm
	{add.f16 %rs462,%rs463,%rs464;
}
	// inline asm
	mov.u16 	%rs1827, %rs462;
	mov.u16 	%rs467, %rs1830;
	// inline asm
	{add.f16 %rs465,%rs462,%rs467;
}
	// inline asm
	mov.u16 	%rs1827, %rs465;
	mov.u16 	%rs469, %rs1828;
	// inline asm
	{sub.f16 %rs468,%rs469,%rs465;
}
	// inline asm
	mov.u16 	%rs1830, %rs468;
	mov.u16 	%rs473, %rs1828;
	// inline asm
	{add.f16 %rs471,%rs468,%rs473;
}
	// inline asm
	mov.u16 	%rs1827, %rs471;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs481, %rs1827;
	mov.u16 	%rs482, %rs1830;
	// inline asm
	{add.f16 %rs480,%rs481,%rs482;
}
	// inline asm
	mov.u16 	%rs1827, %rs480;
	mov.u16 	%rs485, %rs1830;
	// inline asm
	{add.f16 %rs483,%rs480,%rs485;
}
	// inline asm
	mov.u16 	%rs1827, %rs483;
	mov.u16 	%rs487, %rs1828;
	// inline asm
	{sub.f16 %rs486,%rs487,%rs483;
}
	// inline asm
	mov.u16 	%rs1830, %rs486;
	mov.u16 	%rs491, %rs1828;
	// inline asm
	{add.f16 %rs489,%rs486,%rs491;
}
	// inline asm
	mov.u16 	%rs1827, %rs489;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs499, %rs1827;
	mov.u16 	%rs500, %rs1830;
	// inline asm
	{add.f16 %rs498,%rs499,%rs500;
}
	// inline asm
	mov.u16 	%rs1827, %rs498;
	mov.u16 	%rs503, %rs1830;
	// inline asm
	{add.f16 %rs501,%rs498,%rs503;
}
	// inline asm
	mov.u16 	%rs1827, %rs501;
	mov.u16 	%rs505, %rs1828;
	// inline asm
	{sub.f16 %rs504,%rs505,%rs501;
}
	// inline asm
	mov.u16 	%rs1830, %rs504;
	mov.u16 	%rs509, %rs1828;
	// inline asm
	{add.f16 %rs507,%rs504,%rs509;
}
	// inline asm
	mov.u16 	%rs1827, %rs507;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs517, %rs1827;
	mov.u16 	%rs518, %rs1830;
	// inline asm
	{add.f16 %rs516,%rs517,%rs518;
}
	// inline asm
	mov.u16 	%rs1827, %rs516;
	mov.u16 	%rs521, %rs1830;
	// inline asm
	{add.f16 %rs519,%rs516,%rs521;
}
	// inline asm
	mov.u16 	%rs1827, %rs519;
	mov.u16 	%rs523, %rs1828;
	// inline asm
	{sub.f16 %rs522,%rs523,%rs519;
}
	// inline asm
	mov.u16 	%rs1830, %rs522;
	mov.u16 	%rs527, %rs1828;
	// inline asm
	{add.f16 %rs525,%rs522,%rs527;
}
	// inline asm
	mov.u16 	%rs1827, %rs525;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs535, %rs1827;
	mov.u16 	%rs536, %rs1830;
	// inline asm
	{add.f16 %rs534,%rs535,%rs536;
}
	// inline asm
	mov.u16 	%rs1827, %rs534;
	mov.u16 	%rs539, %rs1830;
	// inline asm
	{add.f16 %rs537,%rs534,%rs539;
}
	// inline asm
	mov.u16 	%rs1827, %rs537;
	mov.u16 	%rs541, %rs1828;
	// inline asm
	{sub.f16 %rs540,%rs541,%rs537;
}
	// inline asm
	mov.u16 	%rs1830, %rs540;
	mov.u16 	%rs545, %rs1828;
	// inline asm
	{add.f16 %rs543,%rs540,%rs545;
}
	// inline asm
	mov.u16 	%rs1827, %rs543;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs553, %rs1827;
	mov.u16 	%rs554, %rs1830;
	// inline asm
	{add.f16 %rs552,%rs553,%rs554;
}
	// inline asm
	mov.u16 	%rs1827, %rs552;
	mov.u16 	%rs557, %rs1830;
	// inline asm
	{add.f16 %rs555,%rs552,%rs557;
}
	// inline asm
	mov.u16 	%rs1827, %rs555;
	mov.u16 	%rs559, %rs1828;
	// inline asm
	{sub.f16 %rs558,%rs559,%rs555;
}
	// inline asm
	mov.u16 	%rs1830, %rs558;
	mov.u16 	%rs563, %rs1828;
	// inline asm
	{add.f16 %rs561,%rs558,%rs563;
}
	// inline asm
	mov.u16 	%rs1827, %rs561;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs571, %rs1827;
	mov.u16 	%rs572, %rs1830;
	// inline asm
	{add.f16 %rs570,%rs571,%rs572;
}
	// inline asm
	mov.u16 	%rs1827, %rs570;
	mov.u16 	%rs575, %rs1830;
	// inline asm
	{add.f16 %rs573,%rs570,%rs575;
}
	// inline asm
	mov.u16 	%rs1827, %rs573;
	mov.u16 	%rs577, %rs1828;
	// inline asm
	{sub.f16 %rs576,%rs577,%rs573;
}
	// inline asm
	mov.u16 	%rs1830, %rs576;
	mov.u16 	%rs581, %rs1828;
	// inline asm
	{add.f16 %rs579,%rs576,%rs581;
}
	// inline asm
	mov.u16 	%rs1827, %rs579;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs589, %rs1827;
	mov.u16 	%rs590, %rs1830;
	// inline asm
	{add.f16 %rs588,%rs589,%rs590;
}
	// inline asm
	mov.u16 	%rs1827, %rs588;
	mov.u16 	%rs593, %rs1830;
	// inline asm
	{add.f16 %rs591,%rs588,%rs593;
}
	// inline asm
	mov.u16 	%rs1827, %rs591;
	mov.u16 	%rs595, %rs1828;
	// inline asm
	{sub.f16 %rs594,%rs595,%rs591;
}
	// inline asm
	mov.u16 	%rs1830, %rs594;
	mov.u16 	%rs599, %rs1828;
	// inline asm
	{add.f16 %rs597,%rs594,%rs599;
}
	// inline asm
	mov.u16 	%rs1827, %rs597;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs607, %rs1827;
	mov.u16 	%rs608, %rs1830;
	// inline asm
	{add.f16 %rs606,%rs607,%rs608;
}
	// inline asm
	mov.u16 	%rs1827, %rs606;
	mov.u16 	%rs611, %rs1830;
	// inline asm
	{add.f16 %rs609,%rs606,%rs611;
}
	// inline asm
	mov.u16 	%rs1827, %rs609;
	mov.u16 	%rs613, %rs1828;
	// inline asm
	{sub.f16 %rs612,%rs613,%rs609;
}
	// inline asm
	mov.u16 	%rs1830, %rs612;
	mov.u16 	%rs617, %rs1828;
	// inline asm
	{add.f16 %rs615,%rs612,%rs617;
}
	// inline asm
	mov.u16 	%rs1827, %rs615;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs625, %rs1827;
	mov.u16 	%rs626, %rs1830;
	// inline asm
	{add.f16 %rs624,%rs625,%rs626;
}
	// inline asm
	mov.u16 	%rs1827, %rs624;
	mov.u16 	%rs629, %rs1830;
	// inline asm
	{add.f16 %rs627,%rs624,%rs629;
}
	// inline asm
	mov.u16 	%rs1827, %rs627;
	mov.u16 	%rs631, %rs1828;
	// inline asm
	{sub.f16 %rs630,%rs631,%rs627;
}
	// inline asm
	mov.u16 	%rs1830, %rs630;
	mov.u16 	%rs635, %rs1828;
	// inline asm
	{add.f16 %rs633,%rs630,%rs635;
}
	// inline asm
	mov.u16 	%rs1827, %rs633;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs643, %rs1827;
	mov.u16 	%rs644, %rs1830;
	// inline asm
	{add.f16 %rs642,%rs643,%rs644;
}
	// inline asm
	mov.u16 	%rs1827, %rs642;
	mov.u16 	%rs647, %rs1830;
	// inline asm
	{add.f16 %rs645,%rs642,%rs647;
}
	// inline asm
	mov.u16 	%rs1827, %rs645;
	mov.u16 	%rs649, %rs1828;
	// inline asm
	{sub.f16 %rs648,%rs649,%rs645;
}
	// inline asm
	mov.u16 	%rs1830, %rs648;
	mov.u16 	%rs653, %rs1828;
	// inline asm
	{add.f16 %rs651,%rs648,%rs653;
}
	// inline asm
	mov.u16 	%rs1827, %rs651;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs661, %rs1827;
	mov.u16 	%rs662, %rs1830;
	// inline asm
	{add.f16 %rs660,%rs661,%rs662;
}
	// inline asm
	mov.u16 	%rs1827, %rs660;
	mov.u16 	%rs665, %rs1830;
	// inline asm
	{add.f16 %rs663,%rs660,%rs665;
}
	// inline asm
	mov.u16 	%rs1827, %rs663;
	mov.u16 	%rs667, %rs1828;
	// inline asm
	{sub.f16 %rs666,%rs667,%rs663;
}
	// inline asm
	mov.u16 	%rs1830, %rs666;
	mov.u16 	%rs671, %rs1828;
	// inline asm
	{add.f16 %rs669,%rs666,%rs671;
}
	// inline asm
	mov.u16 	%rs1827, %rs669;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs679, %rs1827;
	mov.u16 	%rs680, %rs1830;
	// inline asm
	{add.f16 %rs678,%rs679,%rs680;
}
	// inline asm
	mov.u16 	%rs1827, %rs678;
	mov.u16 	%rs683, %rs1830;
	// inline asm
	{add.f16 %rs681,%rs678,%rs683;
}
	// inline asm
	mov.u16 	%rs1827, %rs681;
	mov.u16 	%rs685, %rs1828;
	// inline asm
	{sub.f16 %rs684,%rs685,%rs681;
}
	// inline asm
	mov.u16 	%rs1830, %rs684;
	mov.u16 	%rs689, %rs1828;
	// inline asm
	{add.f16 %rs687,%rs684,%rs689;
}
	// inline asm
	mov.u16 	%rs1827, %rs687;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs697, %rs1827;
	mov.u16 	%rs698, %rs1830;
	// inline asm
	{add.f16 %rs696,%rs697,%rs698;
}
	// inline asm
	mov.u16 	%rs1827, %rs696;
	mov.u16 	%rs701, %rs1830;
	// inline asm
	{add.f16 %rs699,%rs696,%rs701;
}
	// inline asm
	mov.u16 	%rs1827, %rs699;
	mov.u16 	%rs703, %rs1828;
	// inline asm
	{sub.f16 %rs702,%rs703,%rs699;
}
	// inline asm
	mov.u16 	%rs1830, %rs702;
	mov.u16 	%rs707, %rs1828;
	// inline asm
	{add.f16 %rs705,%rs702,%rs707;
}
	// inline asm
	mov.u16 	%rs1827, %rs705;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs715, %rs1827;
	mov.u16 	%rs716, %rs1830;
	// inline asm
	{add.f16 %rs714,%rs715,%rs716;
}
	// inline asm
	mov.u16 	%rs1827, %rs714;
	mov.u16 	%rs719, %rs1830;
	// inline asm
	{add.f16 %rs717,%rs714,%rs719;
}
	// inline asm
	mov.u16 	%rs1827, %rs717;
	mov.u16 	%rs721, %rs1828;
	// inline asm
	{sub.f16 %rs720,%rs721,%rs717;
}
	// inline asm
	mov.u16 	%rs1830, %rs720;
	mov.u16 	%rs725, %rs1828;
	// inline asm
	{add.f16 %rs723,%rs720,%rs725;
}
	// inline asm
	mov.u16 	%rs1827, %rs723;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs733, %rs1827;
	mov.u16 	%rs734, %rs1830;
	// inline asm
	{add.f16 %rs732,%rs733,%rs734;
}
	// inline asm
	mov.u16 	%rs1827, %rs732;
	mov.u16 	%rs737, %rs1830;
	// inline asm
	{add.f16 %rs735,%rs732,%rs737;
}
	// inline asm
	mov.u16 	%rs1827, %rs735;
	mov.u16 	%rs739, %rs1828;
	// inline asm
	{sub.f16 %rs738,%rs739,%rs735;
}
	// inline asm
	mov.u16 	%rs1830, %rs738;
	mov.u16 	%rs743, %rs1828;
	// inline asm
	{add.f16 %rs741,%rs738,%rs743;
}
	// inline asm
	mov.u16 	%rs1827, %rs741;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs751, %rs1827;
	mov.u16 	%rs752, %rs1830;
	// inline asm
	{add.f16 %rs750,%rs751,%rs752;
}
	// inline asm
	mov.u16 	%rs1827, %rs750;
	mov.u16 	%rs755, %rs1830;
	// inline asm
	{add.f16 %rs753,%rs750,%rs755;
}
	// inline asm
	mov.u16 	%rs1827, %rs753;
	mov.u16 	%rs757, %rs1828;
	// inline asm
	{sub.f16 %rs756,%rs757,%rs753;
}
	// inline asm
	mov.u16 	%rs1830, %rs756;
	mov.u16 	%rs761, %rs1828;
	// inline asm
	{add.f16 %rs759,%rs756,%rs761;
}
	// inline asm
	mov.u16 	%rs1827, %rs759;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs769, %rs1827;
	mov.u16 	%rs770, %rs1830;
	// inline asm
	{add.f16 %rs768,%rs769,%rs770;
}
	// inline asm
	mov.u16 	%rs1827, %rs768;
	mov.u16 	%rs773, %rs1830;
	// inline asm
	{add.f16 %rs771,%rs768,%rs773;
}
	// inline asm
	mov.u16 	%rs1827, %rs771;
	mov.u16 	%rs775, %rs1828;
	// inline asm
	{sub.f16 %rs774,%rs775,%rs771;
}
	// inline asm
	mov.u16 	%rs1830, %rs774;
	mov.u16 	%rs779, %rs1828;
	// inline asm
	{add.f16 %rs777,%rs774,%rs779;
}
	// inline asm
	mov.u16 	%rs1827, %rs777;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs787, %rs1827;
	mov.u16 	%rs788, %rs1830;
	// inline asm
	{add.f16 %rs786,%rs787,%rs788;
}
	// inline asm
	mov.u16 	%rs1827, %rs786;
	mov.u16 	%rs791, %rs1830;
	// inline asm
	{add.f16 %rs789,%rs786,%rs791;
}
	// inline asm
	mov.u16 	%rs1827, %rs789;
	mov.u16 	%rs793, %rs1828;
	// inline asm
	{sub.f16 %rs792,%rs793,%rs789;
}
	// inline asm
	mov.u16 	%rs1830, %rs792;
	mov.u16 	%rs797, %rs1828;
	// inline asm
	{add.f16 %rs795,%rs792,%rs797;
}
	// inline asm
	mov.u16 	%rs1827, %rs795;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs805, %rs1827;
	mov.u16 	%rs806, %rs1830;
	// inline asm
	{add.f16 %rs804,%rs805,%rs806;
}
	// inline asm
	mov.u16 	%rs1827, %rs804;
	mov.u16 	%rs809, %rs1830;
	// inline asm
	{add.f16 %rs807,%rs804,%rs809;
}
	// inline asm
	mov.u16 	%rs1827, %rs807;
	mov.u16 	%rs811, %rs1828;
	// inline asm
	{sub.f16 %rs810,%rs811,%rs807;
}
	// inline asm
	mov.u16 	%rs1830, %rs810;
	mov.u16 	%rs815, %rs1828;
	// inline asm
	{add.f16 %rs813,%rs810,%rs815;
}
	// inline asm
	mov.u16 	%rs1827, %rs813;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs823, %rs1827;
	mov.u16 	%rs824, %rs1830;
	// inline asm
	{add.f16 %rs822,%rs823,%rs824;
}
	// inline asm
	mov.u16 	%rs1827, %rs822;
	mov.u16 	%rs827, %rs1830;
	// inline asm
	{add.f16 %rs825,%rs822,%rs827;
}
	// inline asm
	mov.u16 	%rs1827, %rs825;
	mov.u16 	%rs829, %rs1828;
	// inline asm
	{sub.f16 %rs828,%rs829,%rs825;
}
	// inline asm
	mov.u16 	%rs1830, %rs828;
	mov.u16 	%rs833, %rs1828;
	// inline asm
	{add.f16 %rs831,%rs828,%rs833;
}
	// inline asm
	mov.u16 	%rs1827, %rs831;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs841, %rs1827;
	mov.u16 	%rs842, %rs1830;
	// inline asm
	{add.f16 %rs840,%rs841,%rs842;
}
	// inline asm
	mov.u16 	%rs1827, %rs840;
	mov.u16 	%rs845, %rs1830;
	// inline asm
	{add.f16 %rs843,%rs840,%rs845;
}
	// inline asm
	mov.u16 	%rs1827, %rs843;
	mov.u16 	%rs847, %rs1828;
	// inline asm
	{sub.f16 %rs846,%rs847,%rs843;
}
	// inline asm
	mov.u16 	%rs1830, %rs846;
	mov.u16 	%rs851, %rs1828;
	// inline asm
	{add.f16 %rs849,%rs846,%rs851;
}
	// inline asm
	mov.u16 	%rs1827, %rs849;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs859, %rs1827;
	mov.u16 	%rs860, %rs1830;
	// inline asm
	{add.f16 %rs858,%rs859,%rs860;
}
	// inline asm
	mov.u16 	%rs1827, %rs858;
	mov.u16 	%rs863, %rs1830;
	// inline asm
	{add.f16 %rs861,%rs858,%rs863;
}
	// inline asm
	mov.u16 	%rs1827, %rs861;
	mov.u16 	%rs865, %rs1828;
	// inline asm
	{sub.f16 %rs864,%rs865,%rs861;
}
	// inline asm
	mov.u16 	%rs1830, %rs864;
	mov.u16 	%rs869, %rs1828;
	// inline asm
	{add.f16 %rs867,%rs864,%rs869;
}
	// inline asm
	mov.u16 	%rs1827, %rs867;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs877, %rs1827;
	mov.u16 	%rs878, %rs1830;
	// inline asm
	{add.f16 %rs876,%rs877,%rs878;
}
	// inline asm
	mov.u16 	%rs1827, %rs876;
	mov.u16 	%rs881, %rs1830;
	// inline asm
	{add.f16 %rs879,%rs876,%rs881;
}
	// inline asm
	mov.u16 	%rs1827, %rs879;
	mov.u16 	%rs883, %rs1828;
	// inline asm
	{sub.f16 %rs882,%rs883,%rs879;
}
	// inline asm
	mov.u16 	%rs1830, %rs882;
	mov.u16 	%rs887, %rs1828;
	// inline asm
	{add.f16 %rs885,%rs882,%rs887;
}
	// inline asm
	mov.u16 	%rs1827, %rs885;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs895, %rs1827;
	mov.u16 	%rs896, %rs1830;
	// inline asm
	{add.f16 %rs894,%rs895,%rs896;
}
	// inline asm
	mov.u16 	%rs1827, %rs894;
	mov.u16 	%rs899, %rs1830;
	// inline asm
	{add.f16 %rs897,%rs894,%rs899;
}
	// inline asm
	mov.u16 	%rs1827, %rs897;
	mov.u16 	%rs901, %rs1828;
	// inline asm
	{sub.f16 %rs900,%rs901,%rs897;
}
	// inline asm
	mov.u16 	%rs1830, %rs900;
	mov.u16 	%rs905, %rs1828;
	// inline asm
	{add.f16 %rs903,%rs900,%rs905;
}
	// inline asm
	mov.u16 	%rs1827, %rs903;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs913, %rs1827;
	mov.u16 	%rs914, %rs1830;
	// inline asm
	{add.f16 %rs912,%rs913,%rs914;
}
	// inline asm
	mov.u16 	%rs1827, %rs912;
	mov.u16 	%rs917, %rs1830;
	// inline asm
	{add.f16 %rs915,%rs912,%rs917;
}
	// inline asm
	mov.u16 	%rs1827, %rs915;
	mov.u16 	%rs919, %rs1828;
	// inline asm
	{sub.f16 %rs918,%rs919,%rs915;
}
	// inline asm
	mov.u16 	%rs1830, %rs918;
	mov.u16 	%rs923, %rs1828;
	// inline asm
	{add.f16 %rs921,%rs918,%rs923;
}
	// inline asm
	mov.u16 	%rs1827, %rs921;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs931, %rs1827;
	mov.u16 	%rs932, %rs1830;
	// inline asm
	{add.f16 %rs930,%rs931,%rs932;
}
	// inline asm
	mov.u16 	%rs1827, %rs930;
	mov.u16 	%rs935, %rs1830;
	// inline asm
	{add.f16 %rs933,%rs930,%rs935;
}
	// inline asm
	mov.u16 	%rs1827, %rs933;
	mov.u16 	%rs937, %rs1828;
	// inline asm
	{sub.f16 %rs936,%rs937,%rs933;
}
	// inline asm
	mov.u16 	%rs1830, %rs936;
	mov.u16 	%rs941, %rs1828;
	// inline asm
	{add.f16 %rs939,%rs936,%rs941;
}
	// inline asm
	mov.u16 	%rs1827, %rs939;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs949, %rs1827;
	mov.u16 	%rs950, %rs1830;
	// inline asm
	{add.f16 %rs948,%rs949,%rs950;
}
	// inline asm
	mov.u16 	%rs1827, %rs948;
	mov.u16 	%rs953, %rs1830;
	// inline asm
	{add.f16 %rs951,%rs948,%rs953;
}
	// inline asm
	mov.u16 	%rs1827, %rs951;
	mov.u16 	%rs955, %rs1828;
	// inline asm
	{sub.f16 %rs954,%rs955,%rs951;
}
	// inline asm
	mov.u16 	%rs1830, %rs954;
	mov.u16 	%rs959, %rs1828;
	// inline asm
	{add.f16 %rs957,%rs954,%rs959;
}
	// inline asm
	mov.u16 	%rs1827, %rs957;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs967, %rs1827;
	mov.u16 	%rs968, %rs1830;
	// inline asm
	{add.f16 %rs966,%rs967,%rs968;
}
	// inline asm
	mov.u16 	%rs1827, %rs966;
	mov.u16 	%rs971, %rs1830;
	// inline asm
	{add.f16 %rs969,%rs966,%rs971;
}
	// inline asm
	mov.u16 	%rs1827, %rs969;
	mov.u16 	%rs973, %rs1828;
	// inline asm
	{sub.f16 %rs972,%rs973,%rs969;
}
	// inline asm
	mov.u16 	%rs1830, %rs972;
	mov.u16 	%rs977, %rs1828;
	// inline asm
	{add.f16 %rs975,%rs972,%rs977;
}
	// inline asm
	mov.u16 	%rs1827, %rs975;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs985, %rs1827;
	mov.u16 	%rs986, %rs1830;
	// inline asm
	{add.f16 %rs984,%rs985,%rs986;
}
	// inline asm
	mov.u16 	%rs1827, %rs984;
	mov.u16 	%rs989, %rs1830;
	// inline asm
	{add.f16 %rs987,%rs984,%rs989;
}
	// inline asm
	mov.u16 	%rs1827, %rs987;
	mov.u16 	%rs991, %rs1828;
	// inline asm
	{sub.f16 %rs990,%rs991,%rs987;
}
	// inline asm
	mov.u16 	%rs1830, %rs990;
	mov.u16 	%rs995, %rs1828;
	// inline asm
	{add.f16 %rs993,%rs990,%rs995;
}
	// inline asm
	mov.u16 	%rs1827, %rs993;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1003, %rs1827;
	mov.u16 	%rs1004, %rs1830;
	// inline asm
	{add.f16 %rs1002,%rs1003,%rs1004;
}
	// inline asm
	mov.u16 	%rs1827, %rs1002;
	mov.u16 	%rs1007, %rs1830;
	// inline asm
	{add.f16 %rs1005,%rs1002,%rs1007;
}
	// inline asm
	mov.u16 	%rs1827, %rs1005;
	mov.u16 	%rs1009, %rs1828;
	// inline asm
	{sub.f16 %rs1008,%rs1009,%rs1005;
}
	// inline asm
	mov.u16 	%rs1830, %rs1008;
	mov.u16 	%rs1013, %rs1828;
	// inline asm
	{add.f16 %rs1011,%rs1008,%rs1013;
}
	// inline asm
	mov.u16 	%rs1827, %rs1011;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1021, %rs1827;
	mov.u16 	%rs1022, %rs1830;
	// inline asm
	{add.f16 %rs1020,%rs1021,%rs1022;
}
	// inline asm
	mov.u16 	%rs1827, %rs1020;
	mov.u16 	%rs1025, %rs1830;
	// inline asm
	{add.f16 %rs1023,%rs1020,%rs1025;
}
	// inline asm
	mov.u16 	%rs1827, %rs1023;
	mov.u16 	%rs1027, %rs1828;
	// inline asm
	{sub.f16 %rs1026,%rs1027,%rs1023;
}
	// inline asm
	mov.u16 	%rs1830, %rs1026;
	mov.u16 	%rs1031, %rs1828;
	// inline asm
	{add.f16 %rs1029,%rs1026,%rs1031;
}
	// inline asm
	mov.u16 	%rs1827, %rs1029;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1039, %rs1827;
	mov.u16 	%rs1040, %rs1830;
	// inline asm
	{add.f16 %rs1038,%rs1039,%rs1040;
}
	// inline asm
	mov.u16 	%rs1827, %rs1038;
	mov.u16 	%rs1043, %rs1830;
	// inline asm
	{add.f16 %rs1041,%rs1038,%rs1043;
}
	// inline asm
	mov.u16 	%rs1827, %rs1041;
	mov.u16 	%rs1045, %rs1828;
	// inline asm
	{sub.f16 %rs1044,%rs1045,%rs1041;
}
	// inline asm
	mov.u16 	%rs1830, %rs1044;
	mov.u16 	%rs1049, %rs1828;
	// inline asm
	{add.f16 %rs1047,%rs1044,%rs1049;
}
	// inline asm
	mov.u16 	%rs1827, %rs1047;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1057, %rs1827;
	mov.u16 	%rs1058, %rs1830;
	// inline asm
	{add.f16 %rs1056,%rs1057,%rs1058;
}
	// inline asm
	mov.u16 	%rs1827, %rs1056;
	mov.u16 	%rs1061, %rs1830;
	// inline asm
	{add.f16 %rs1059,%rs1056,%rs1061;
}
	// inline asm
	mov.u16 	%rs1827, %rs1059;
	mov.u16 	%rs1063, %rs1828;
	// inline asm
	{sub.f16 %rs1062,%rs1063,%rs1059;
}
	// inline asm
	mov.u16 	%rs1830, %rs1062;
	mov.u16 	%rs1067, %rs1828;
	// inline asm
	{add.f16 %rs1065,%rs1062,%rs1067;
}
	// inline asm
	mov.u16 	%rs1827, %rs1065;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1075, %rs1827;
	mov.u16 	%rs1076, %rs1830;
	// inline asm
	{add.f16 %rs1074,%rs1075,%rs1076;
}
	// inline asm
	mov.u16 	%rs1827, %rs1074;
	mov.u16 	%rs1079, %rs1830;
	// inline asm
	{add.f16 %rs1077,%rs1074,%rs1079;
}
	// inline asm
	mov.u16 	%rs1827, %rs1077;
	mov.u16 	%rs1081, %rs1828;
	// inline asm
	{sub.f16 %rs1080,%rs1081,%rs1077;
}
	// inline asm
	mov.u16 	%rs1830, %rs1080;
	mov.u16 	%rs1085, %rs1828;
	// inline asm
	{add.f16 %rs1083,%rs1080,%rs1085;
}
	// inline asm
	mov.u16 	%rs1827, %rs1083;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1093, %rs1827;
	mov.u16 	%rs1094, %rs1830;
	// inline asm
	{add.f16 %rs1092,%rs1093,%rs1094;
}
	// inline asm
	mov.u16 	%rs1827, %rs1092;
	mov.u16 	%rs1097, %rs1830;
	// inline asm
	{add.f16 %rs1095,%rs1092,%rs1097;
}
	// inline asm
	mov.u16 	%rs1827, %rs1095;
	mov.u16 	%rs1099, %rs1828;
	// inline asm
	{sub.f16 %rs1098,%rs1099,%rs1095;
}
	// inline asm
	mov.u16 	%rs1830, %rs1098;
	mov.u16 	%rs1103, %rs1828;
	// inline asm
	{add.f16 %rs1101,%rs1098,%rs1103;
}
	// inline asm
	mov.u16 	%rs1827, %rs1101;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1111, %rs1827;
	mov.u16 	%rs1112, %rs1830;
	// inline asm
	{add.f16 %rs1110,%rs1111,%rs1112;
}
	// inline asm
	mov.u16 	%rs1827, %rs1110;
	mov.u16 	%rs1115, %rs1830;
	// inline asm
	{add.f16 %rs1113,%rs1110,%rs1115;
}
	// inline asm
	mov.u16 	%rs1827, %rs1113;
	mov.u16 	%rs1117, %rs1828;
	// inline asm
	{sub.f16 %rs1116,%rs1117,%rs1113;
}
	// inline asm
	mov.u16 	%rs1830, %rs1116;
	mov.u16 	%rs1121, %rs1828;
	// inline asm
	{add.f16 %rs1119,%rs1116,%rs1121;
}
	// inline asm
	mov.u16 	%rs1827, %rs1119;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1129, %rs1827;
	mov.u16 	%rs1130, %rs1830;
	// inline asm
	{add.f16 %rs1128,%rs1129,%rs1130;
}
	// inline asm
	mov.u16 	%rs1827, %rs1128;
	mov.u16 	%rs1133, %rs1830;
	// inline asm
	{add.f16 %rs1131,%rs1128,%rs1133;
}
	// inline asm
	mov.u16 	%rs1827, %rs1131;
	mov.u16 	%rs1135, %rs1828;
	// inline asm
	{sub.f16 %rs1134,%rs1135,%rs1131;
}
	// inline asm
	mov.u16 	%rs1830, %rs1134;
	mov.u16 	%rs1139, %rs1828;
	// inline asm
	{add.f16 %rs1137,%rs1134,%rs1139;
}
	// inline asm
	mov.u16 	%rs1827, %rs1137;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1147, %rs1827;
	mov.u16 	%rs1148, %rs1830;
	// inline asm
	{add.f16 %rs1146,%rs1147,%rs1148;
}
	// inline asm
	mov.u16 	%rs1827, %rs1146;
	mov.u16 	%rs1151, %rs1830;
	// inline asm
	{add.f16 %rs1149,%rs1146,%rs1151;
}
	// inline asm
	mov.u16 	%rs1827, %rs1149;
	mov.u16 	%rs1153, %rs1828;
	// inline asm
	{sub.f16 %rs1152,%rs1153,%rs1149;
}
	// inline asm
	mov.u16 	%rs1830, %rs1152;
	mov.u16 	%rs1157, %rs1828;
	// inline asm
	{add.f16 %rs1155,%rs1152,%rs1157;
}
	// inline asm
	mov.u16 	%rs1827, %rs1155;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1165, %rs1827;
	mov.u16 	%rs1166, %rs1830;
	// inline asm
	{add.f16 %rs1164,%rs1165,%rs1166;
}
	// inline asm
	mov.u16 	%rs1827, %rs1164;
	mov.u16 	%rs1169, %rs1830;
	// inline asm
	{add.f16 %rs1167,%rs1164,%rs1169;
}
	// inline asm
	mov.u16 	%rs1827, %rs1167;
	mov.u16 	%rs1171, %rs1828;
	// inline asm
	{sub.f16 %rs1170,%rs1171,%rs1167;
}
	// inline asm
	mov.u16 	%rs1830, %rs1170;
	mov.u16 	%rs1175, %rs1828;
	// inline asm
	{add.f16 %rs1173,%rs1170,%rs1175;
}
	// inline asm
	mov.u16 	%rs1827, %rs1173;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1183, %rs1827;
	mov.u16 	%rs1184, %rs1830;
	// inline asm
	{add.f16 %rs1182,%rs1183,%rs1184;
}
	// inline asm
	mov.u16 	%rs1827, %rs1182;
	mov.u16 	%rs1187, %rs1830;
	// inline asm
	{add.f16 %rs1185,%rs1182,%rs1187;
}
	// inline asm
	mov.u16 	%rs1827, %rs1185;
	mov.u16 	%rs1189, %rs1828;
	// inline asm
	{sub.f16 %rs1188,%rs1189,%rs1185;
}
	// inline asm
	mov.u16 	%rs1830, %rs1188;
	mov.u16 	%rs1193, %rs1828;
	// inline asm
	{add.f16 %rs1191,%rs1188,%rs1193;
}
	// inline asm
	mov.u16 	%rs1827, %rs1191;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1201, %rs1827;
	mov.u16 	%rs1202, %rs1830;
	// inline asm
	{add.f16 %rs1200,%rs1201,%rs1202;
}
	// inline asm
	mov.u16 	%rs1827, %rs1200;
	mov.u16 	%rs1205, %rs1830;
	// inline asm
	{add.f16 %rs1203,%rs1200,%rs1205;
}
	// inline asm
	mov.u16 	%rs1827, %rs1203;
	mov.u16 	%rs1207, %rs1828;
	// inline asm
	{sub.f16 %rs1206,%rs1207,%rs1203;
}
	// inline asm
	mov.u16 	%rs1830, %rs1206;
	mov.u16 	%rs1211, %rs1828;
	// inline asm
	{add.f16 %rs1209,%rs1206,%rs1211;
}
	// inline asm
	mov.u16 	%rs1827, %rs1209;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1219, %rs1827;
	mov.u16 	%rs1220, %rs1830;
	// inline asm
	{add.f16 %rs1218,%rs1219,%rs1220;
}
	// inline asm
	mov.u16 	%rs1827, %rs1218;
	mov.u16 	%rs1223, %rs1830;
	// inline asm
	{add.f16 %rs1221,%rs1218,%rs1223;
}
	// inline asm
	mov.u16 	%rs1827, %rs1221;
	mov.u16 	%rs1225, %rs1828;
	// inline asm
	{sub.f16 %rs1224,%rs1225,%rs1221;
}
	// inline asm
	mov.u16 	%rs1830, %rs1224;
	mov.u16 	%rs1229, %rs1828;
	// inline asm
	{add.f16 %rs1227,%rs1224,%rs1229;
}
	// inline asm
	mov.u16 	%rs1827, %rs1227;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1237, %rs1827;
	mov.u16 	%rs1238, %rs1830;
	// inline asm
	{add.f16 %rs1236,%rs1237,%rs1238;
}
	// inline asm
	mov.u16 	%rs1827, %rs1236;
	mov.u16 	%rs1241, %rs1830;
	// inline asm
	{add.f16 %rs1239,%rs1236,%rs1241;
}
	// inline asm
	mov.u16 	%rs1827, %rs1239;
	mov.u16 	%rs1243, %rs1828;
	// inline asm
	{sub.f16 %rs1242,%rs1243,%rs1239;
}
	// inline asm
	mov.u16 	%rs1830, %rs1242;
	mov.u16 	%rs1247, %rs1828;
	// inline asm
	{add.f16 %rs1245,%rs1242,%rs1247;
}
	// inline asm
	mov.u16 	%rs1827, %rs1245;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1255, %rs1827;
	mov.u16 	%rs1256, %rs1830;
	// inline asm
	{add.f16 %rs1254,%rs1255,%rs1256;
}
	// inline asm
	mov.u16 	%rs1827, %rs1254;
	mov.u16 	%rs1259, %rs1830;
	// inline asm
	{add.f16 %rs1257,%rs1254,%rs1259;
}
	// inline asm
	mov.u16 	%rs1827, %rs1257;
	mov.u16 	%rs1261, %rs1828;
	// inline asm
	{sub.f16 %rs1260,%rs1261,%rs1257;
}
	// inline asm
	mov.u16 	%rs1830, %rs1260;
	mov.u16 	%rs1265, %rs1828;
	// inline asm
	{add.f16 %rs1263,%rs1260,%rs1265;
}
	// inline asm
	mov.u16 	%rs1827, %rs1263;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1273, %rs1827;
	mov.u16 	%rs1274, %rs1830;
	// inline asm
	{add.f16 %rs1272,%rs1273,%rs1274;
}
	// inline asm
	mov.u16 	%rs1827, %rs1272;
	mov.u16 	%rs1277, %rs1830;
	// inline asm
	{add.f16 %rs1275,%rs1272,%rs1277;
}
	// inline asm
	mov.u16 	%rs1827, %rs1275;
	mov.u16 	%rs1279, %rs1828;
	// inline asm
	{sub.f16 %rs1278,%rs1279,%rs1275;
}
	// inline asm
	mov.u16 	%rs1830, %rs1278;
	mov.u16 	%rs1283, %rs1828;
	// inline asm
	{add.f16 %rs1281,%rs1278,%rs1283;
}
	// inline asm
	mov.u16 	%rs1827, %rs1281;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1291, %rs1827;
	mov.u16 	%rs1292, %rs1830;
	// inline asm
	{add.f16 %rs1290,%rs1291,%rs1292;
}
	// inline asm
	mov.u16 	%rs1827, %rs1290;
	mov.u16 	%rs1295, %rs1830;
	// inline asm
	{add.f16 %rs1293,%rs1290,%rs1295;
}
	// inline asm
	mov.u16 	%rs1827, %rs1293;
	mov.u16 	%rs1297, %rs1828;
	// inline asm
	{sub.f16 %rs1296,%rs1297,%rs1293;
}
	// inline asm
	mov.u16 	%rs1830, %rs1296;
	mov.u16 	%rs1301, %rs1828;
	// inline asm
	{add.f16 %rs1299,%rs1296,%rs1301;
}
	// inline asm
	mov.u16 	%rs1827, %rs1299;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1309, %rs1827;
	mov.u16 	%rs1310, %rs1830;
	// inline asm
	{add.f16 %rs1308,%rs1309,%rs1310;
}
	// inline asm
	mov.u16 	%rs1827, %rs1308;
	mov.u16 	%rs1313, %rs1830;
	// inline asm
	{add.f16 %rs1311,%rs1308,%rs1313;
}
	// inline asm
	mov.u16 	%rs1827, %rs1311;
	mov.u16 	%rs1315, %rs1828;
	// inline asm
	{sub.f16 %rs1314,%rs1315,%rs1311;
}
	// inline asm
	mov.u16 	%rs1830, %rs1314;
	mov.u16 	%rs1319, %rs1828;
	// inline asm
	{add.f16 %rs1317,%rs1314,%rs1319;
}
	// inline asm
	mov.u16 	%rs1827, %rs1317;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1327, %rs1827;
	mov.u16 	%rs1328, %rs1830;
	// inline asm
	{add.f16 %rs1326,%rs1327,%rs1328;
}
	// inline asm
	mov.u16 	%rs1827, %rs1326;
	mov.u16 	%rs1331, %rs1830;
	// inline asm
	{add.f16 %rs1329,%rs1326,%rs1331;
}
	// inline asm
	mov.u16 	%rs1827, %rs1329;
	mov.u16 	%rs1333, %rs1828;
	// inline asm
	{sub.f16 %rs1332,%rs1333,%rs1329;
}
	// inline asm
	mov.u16 	%rs1830, %rs1332;
	mov.u16 	%rs1337, %rs1828;
	// inline asm
	{add.f16 %rs1335,%rs1332,%rs1337;
}
	// inline asm
	mov.u16 	%rs1827, %rs1335;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1345, %rs1827;
	mov.u16 	%rs1346, %rs1830;
	// inline asm
	{add.f16 %rs1344,%rs1345,%rs1346;
}
	// inline asm
	mov.u16 	%rs1827, %rs1344;
	mov.u16 	%rs1349, %rs1830;
	// inline asm
	{add.f16 %rs1347,%rs1344,%rs1349;
}
	// inline asm
	mov.u16 	%rs1827, %rs1347;
	mov.u16 	%rs1351, %rs1828;
	// inline asm
	{sub.f16 %rs1350,%rs1351,%rs1347;
}
	// inline asm
	mov.u16 	%rs1830, %rs1350;
	mov.u16 	%rs1355, %rs1828;
	// inline asm
	{add.f16 %rs1353,%rs1350,%rs1355;
}
	// inline asm
	mov.u16 	%rs1827, %rs1353;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1363, %rs1827;
	mov.u16 	%rs1364, %rs1830;
	// inline asm
	{add.f16 %rs1362,%rs1363,%rs1364;
}
	// inline asm
	mov.u16 	%rs1827, %rs1362;
	mov.u16 	%rs1367, %rs1830;
	// inline asm
	{add.f16 %rs1365,%rs1362,%rs1367;
}
	// inline asm
	mov.u16 	%rs1827, %rs1365;
	mov.u16 	%rs1369, %rs1828;
	// inline asm
	{sub.f16 %rs1368,%rs1369,%rs1365;
}
	// inline asm
	mov.u16 	%rs1830, %rs1368;
	mov.u16 	%rs1373, %rs1828;
	// inline asm
	{add.f16 %rs1371,%rs1368,%rs1373;
}
	// inline asm
	mov.u16 	%rs1827, %rs1371;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1381, %rs1827;
	mov.u16 	%rs1382, %rs1830;
	// inline asm
	{add.f16 %rs1380,%rs1381,%rs1382;
}
	// inline asm
	mov.u16 	%rs1827, %rs1380;
	mov.u16 	%rs1385, %rs1830;
	// inline asm
	{add.f16 %rs1383,%rs1380,%rs1385;
}
	// inline asm
	mov.u16 	%rs1827, %rs1383;
	mov.u16 	%rs1387, %rs1828;
	// inline asm
	{sub.f16 %rs1386,%rs1387,%rs1383;
}
	// inline asm
	mov.u16 	%rs1830, %rs1386;
	mov.u16 	%rs1391, %rs1828;
	// inline asm
	{add.f16 %rs1389,%rs1386,%rs1391;
}
	// inline asm
	mov.u16 	%rs1827, %rs1389;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1399, %rs1827;
	mov.u16 	%rs1400, %rs1830;
	// inline asm
	{add.f16 %rs1398,%rs1399,%rs1400;
}
	// inline asm
	mov.u16 	%rs1827, %rs1398;
	mov.u16 	%rs1403, %rs1830;
	// inline asm
	{add.f16 %rs1401,%rs1398,%rs1403;
}
	// inline asm
	mov.u16 	%rs1827, %rs1401;
	mov.u16 	%rs1405, %rs1828;
	// inline asm
	{sub.f16 %rs1404,%rs1405,%rs1401;
}
	// inline asm
	mov.u16 	%rs1830, %rs1404;
	mov.u16 	%rs1409, %rs1828;
	// inline asm
	{add.f16 %rs1407,%rs1404,%rs1409;
}
	// inline asm
	mov.u16 	%rs1827, %rs1407;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1417, %rs1827;
	mov.u16 	%rs1418, %rs1830;
	// inline asm
	{add.f16 %rs1416,%rs1417,%rs1418;
}
	// inline asm
	mov.u16 	%rs1827, %rs1416;
	mov.u16 	%rs1421, %rs1830;
	// inline asm
	{add.f16 %rs1419,%rs1416,%rs1421;
}
	// inline asm
	mov.u16 	%rs1827, %rs1419;
	mov.u16 	%rs1423, %rs1828;
	// inline asm
	{sub.f16 %rs1422,%rs1423,%rs1419;
}
	// inline asm
	mov.u16 	%rs1830, %rs1422;
	mov.u16 	%rs1427, %rs1828;
	// inline asm
	{add.f16 %rs1425,%rs1422,%rs1427;
}
	// inline asm
	mov.u16 	%rs1827, %rs1425;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1435, %rs1827;
	mov.u16 	%rs1436, %rs1830;
	// inline asm
	{add.f16 %rs1434,%rs1435,%rs1436;
}
	// inline asm
	mov.u16 	%rs1827, %rs1434;
	mov.u16 	%rs1439, %rs1830;
	// inline asm
	{add.f16 %rs1437,%rs1434,%rs1439;
}
	// inline asm
	mov.u16 	%rs1827, %rs1437;
	mov.u16 	%rs1441, %rs1828;
	// inline asm
	{sub.f16 %rs1440,%rs1441,%rs1437;
}
	// inline asm
	mov.u16 	%rs1830, %rs1440;
	mov.u16 	%rs1445, %rs1828;
	// inline asm
	{add.f16 %rs1443,%rs1440,%rs1445;
}
	// inline asm
	mov.u16 	%rs1827, %rs1443;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1453, %rs1827;
	mov.u16 	%rs1454, %rs1830;
	// inline asm
	{add.f16 %rs1452,%rs1453,%rs1454;
}
	// inline asm
	mov.u16 	%rs1827, %rs1452;
	mov.u16 	%rs1457, %rs1830;
	// inline asm
	{add.f16 %rs1455,%rs1452,%rs1457;
}
	// inline asm
	mov.u16 	%rs1827, %rs1455;
	mov.u16 	%rs1459, %rs1828;
	// inline asm
	{sub.f16 %rs1458,%rs1459,%rs1455;
}
	// inline asm
	mov.u16 	%rs1830, %rs1458;
	mov.u16 	%rs1463, %rs1828;
	// inline asm
	{add.f16 %rs1461,%rs1458,%rs1463;
}
	// inline asm
	mov.u16 	%rs1827, %rs1461;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1471, %rs1827;
	mov.u16 	%rs1472, %rs1830;
	// inline asm
	{add.f16 %rs1470,%rs1471,%rs1472;
}
	// inline asm
	mov.u16 	%rs1827, %rs1470;
	mov.u16 	%rs1475, %rs1830;
	// inline asm
	{add.f16 %rs1473,%rs1470,%rs1475;
}
	// inline asm
	mov.u16 	%rs1827, %rs1473;
	mov.u16 	%rs1477, %rs1828;
	// inline asm
	{sub.f16 %rs1476,%rs1477,%rs1473;
}
	// inline asm
	mov.u16 	%rs1830, %rs1476;
	mov.u16 	%rs1481, %rs1828;
	// inline asm
	{add.f16 %rs1479,%rs1476,%rs1481;
}
	// inline asm
	mov.u16 	%rs1827, %rs1479;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1489, %rs1827;
	mov.u16 	%rs1490, %rs1830;
	// inline asm
	{add.f16 %rs1488,%rs1489,%rs1490;
}
	// inline asm
	mov.u16 	%rs1827, %rs1488;
	mov.u16 	%rs1493, %rs1830;
	// inline asm
	{add.f16 %rs1491,%rs1488,%rs1493;
}
	// inline asm
	mov.u16 	%rs1827, %rs1491;
	mov.u16 	%rs1495, %rs1828;
	// inline asm
	{sub.f16 %rs1494,%rs1495,%rs1491;
}
	// inline asm
	mov.u16 	%rs1830, %rs1494;
	mov.u16 	%rs1499, %rs1828;
	// inline asm
	{add.f16 %rs1497,%rs1494,%rs1499;
}
	// inline asm
	mov.u16 	%rs1827, %rs1497;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1507, %rs1827;
	mov.u16 	%rs1508, %rs1830;
	// inline asm
	{add.f16 %rs1506,%rs1507,%rs1508;
}
	// inline asm
	mov.u16 	%rs1827, %rs1506;
	mov.u16 	%rs1511, %rs1830;
	// inline asm
	{add.f16 %rs1509,%rs1506,%rs1511;
}
	// inline asm
	mov.u16 	%rs1827, %rs1509;
	mov.u16 	%rs1513, %rs1828;
	// inline asm
	{sub.f16 %rs1512,%rs1513,%rs1509;
}
	// inline asm
	mov.u16 	%rs1830, %rs1512;
	mov.u16 	%rs1517, %rs1828;
	// inline asm
	{add.f16 %rs1515,%rs1512,%rs1517;
}
	// inline asm
	mov.u16 	%rs1827, %rs1515;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1525, %rs1827;
	mov.u16 	%rs1526, %rs1830;
	// inline asm
	{add.f16 %rs1524,%rs1525,%rs1526;
}
	// inline asm
	mov.u16 	%rs1827, %rs1524;
	mov.u16 	%rs1529, %rs1830;
	// inline asm
	{add.f16 %rs1527,%rs1524,%rs1529;
}
	// inline asm
	mov.u16 	%rs1827, %rs1527;
	mov.u16 	%rs1531, %rs1828;
	// inline asm
	{sub.f16 %rs1530,%rs1531,%rs1527;
}
	// inline asm
	mov.u16 	%rs1830, %rs1530;
	mov.u16 	%rs1535, %rs1828;
	// inline asm
	{add.f16 %rs1533,%rs1530,%rs1535;
}
	// inline asm
	mov.u16 	%rs1827, %rs1533;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1543, %rs1827;
	mov.u16 	%rs1544, %rs1830;
	// inline asm
	{add.f16 %rs1542,%rs1543,%rs1544;
}
	// inline asm
	mov.u16 	%rs1827, %rs1542;
	mov.u16 	%rs1547, %rs1830;
	// inline asm
	{add.f16 %rs1545,%rs1542,%rs1547;
}
	// inline asm
	mov.u16 	%rs1827, %rs1545;
	mov.u16 	%rs1549, %rs1828;
	// inline asm
	{sub.f16 %rs1548,%rs1549,%rs1545;
}
	// inline asm
	mov.u16 	%rs1830, %rs1548;
	mov.u16 	%rs1553, %rs1828;
	// inline asm
	{add.f16 %rs1551,%rs1548,%rs1553;
}
	// inline asm
	mov.u16 	%rs1827, %rs1551;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1561, %rs1827;
	mov.u16 	%rs1562, %rs1830;
	// inline asm
	{add.f16 %rs1560,%rs1561,%rs1562;
}
	// inline asm
	mov.u16 	%rs1827, %rs1560;
	mov.u16 	%rs1565, %rs1830;
	// inline asm
	{add.f16 %rs1563,%rs1560,%rs1565;
}
	// inline asm
	mov.u16 	%rs1827, %rs1563;
	mov.u16 	%rs1567, %rs1828;
	// inline asm
	{sub.f16 %rs1566,%rs1567,%rs1563;
}
	// inline asm
	mov.u16 	%rs1830, %rs1566;
	mov.u16 	%rs1571, %rs1828;
	// inline asm
	{add.f16 %rs1569,%rs1566,%rs1571;
}
	// inline asm
	mov.u16 	%rs1827, %rs1569;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1579, %rs1827;
	mov.u16 	%rs1580, %rs1830;
	// inline asm
	{add.f16 %rs1578,%rs1579,%rs1580;
}
	// inline asm
	mov.u16 	%rs1827, %rs1578;
	mov.u16 	%rs1583, %rs1830;
	// inline asm
	{add.f16 %rs1581,%rs1578,%rs1583;
}
	// inline asm
	mov.u16 	%rs1827, %rs1581;
	mov.u16 	%rs1585, %rs1828;
	// inline asm
	{sub.f16 %rs1584,%rs1585,%rs1581;
}
	// inline asm
	mov.u16 	%rs1830, %rs1584;
	mov.u16 	%rs1589, %rs1828;
	// inline asm
	{add.f16 %rs1587,%rs1584,%rs1589;
}
	// inline asm
	mov.u16 	%rs1827, %rs1587;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1597, %rs1827;
	mov.u16 	%rs1598, %rs1830;
	// inline asm
	{add.f16 %rs1596,%rs1597,%rs1598;
}
	// inline asm
	mov.u16 	%rs1827, %rs1596;
	mov.u16 	%rs1601, %rs1830;
	// inline asm
	{add.f16 %rs1599,%rs1596,%rs1601;
}
	// inline asm
	mov.u16 	%rs1827, %rs1599;
	mov.u16 	%rs1603, %rs1828;
	// inline asm
	{sub.f16 %rs1602,%rs1603,%rs1599;
}
	// inline asm
	mov.u16 	%rs1830, %rs1602;
	mov.u16 	%rs1607, %rs1828;
	// inline asm
	{add.f16 %rs1605,%rs1602,%rs1607;
}
	// inline asm
	mov.u16 	%rs1827, %rs1605;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1615, %rs1827;
	mov.u16 	%rs1616, %rs1830;
	// inline asm
	{add.f16 %rs1614,%rs1615,%rs1616;
}
	// inline asm
	mov.u16 	%rs1827, %rs1614;
	mov.u16 	%rs1619, %rs1830;
	// inline asm
	{add.f16 %rs1617,%rs1614,%rs1619;
}
	// inline asm
	mov.u16 	%rs1827, %rs1617;
	mov.u16 	%rs1621, %rs1828;
	// inline asm
	{sub.f16 %rs1620,%rs1621,%rs1617;
}
	// inline asm
	mov.u16 	%rs1830, %rs1620;
	mov.u16 	%rs1625, %rs1828;
	// inline asm
	{add.f16 %rs1623,%rs1620,%rs1625;
}
	// inline asm
	mov.u16 	%rs1827, %rs1623;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1633, %rs1827;
	mov.u16 	%rs1634, %rs1830;
	// inline asm
	{add.f16 %rs1632,%rs1633,%rs1634;
}
	// inline asm
	mov.u16 	%rs1827, %rs1632;
	mov.u16 	%rs1637, %rs1830;
	// inline asm
	{add.f16 %rs1635,%rs1632,%rs1637;
}
	// inline asm
	mov.u16 	%rs1827, %rs1635;
	mov.u16 	%rs1639, %rs1828;
	// inline asm
	{sub.f16 %rs1638,%rs1639,%rs1635;
}
	// inline asm
	mov.u16 	%rs1830, %rs1638;
	mov.u16 	%rs1643, %rs1828;
	// inline asm
	{add.f16 %rs1641,%rs1638,%rs1643;
}
	// inline asm
	mov.u16 	%rs1827, %rs1641;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1651, %rs1827;
	mov.u16 	%rs1652, %rs1830;
	// inline asm
	{add.f16 %rs1650,%rs1651,%rs1652;
}
	// inline asm
	mov.u16 	%rs1827, %rs1650;
	mov.u16 	%rs1655, %rs1830;
	// inline asm
	{add.f16 %rs1653,%rs1650,%rs1655;
}
	// inline asm
	mov.u16 	%rs1827, %rs1653;
	mov.u16 	%rs1657, %rs1828;
	// inline asm
	{sub.f16 %rs1656,%rs1657,%rs1653;
}
	// inline asm
	mov.u16 	%rs1830, %rs1656;
	mov.u16 	%rs1661, %rs1828;
	// inline asm
	{add.f16 %rs1659,%rs1656,%rs1661;
}
	// inline asm
	mov.u16 	%rs1827, %rs1659;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1669, %rs1827;
	mov.u16 	%rs1670, %rs1830;
	// inline asm
	{add.f16 %rs1668,%rs1669,%rs1670;
}
	// inline asm
	mov.u16 	%rs1827, %rs1668;
	mov.u16 	%rs1673, %rs1830;
	// inline asm
	{add.f16 %rs1671,%rs1668,%rs1673;
}
	// inline asm
	mov.u16 	%rs1827, %rs1671;
	mov.u16 	%rs1675, %rs1828;
	// inline asm
	{sub.f16 %rs1674,%rs1675,%rs1671;
}
	// inline asm
	mov.u16 	%rs1830, %rs1674;
	mov.u16 	%rs1679, %rs1828;
	// inline asm
	{add.f16 %rs1677,%rs1674,%rs1679;
}
	// inline asm
	mov.u16 	%rs1827, %rs1677;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1687, %rs1827;
	mov.u16 	%rs1688, %rs1830;
	// inline asm
	{add.f16 %rs1686,%rs1687,%rs1688;
}
	// inline asm
	mov.u16 	%rs1827, %rs1686;
	mov.u16 	%rs1691, %rs1830;
	// inline asm
	{add.f16 %rs1689,%rs1686,%rs1691;
}
	// inline asm
	mov.u16 	%rs1827, %rs1689;
	mov.u16 	%rs1693, %rs1828;
	// inline asm
	{sub.f16 %rs1692,%rs1693,%rs1689;
}
	// inline asm
	mov.u16 	%rs1830, %rs1692;
	mov.u16 	%rs1697, %rs1828;
	// inline asm
	{add.f16 %rs1695,%rs1692,%rs1697;
}
	// inline asm
	mov.u16 	%rs1827, %rs1695;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1705, %rs1827;
	mov.u16 	%rs1706, %rs1830;
	// inline asm
	{add.f16 %rs1704,%rs1705,%rs1706;
}
	// inline asm
	mov.u16 	%rs1827, %rs1704;
	mov.u16 	%rs1709, %rs1830;
	// inline asm
	{add.f16 %rs1707,%rs1704,%rs1709;
}
	// inline asm
	mov.u16 	%rs1827, %rs1707;
	mov.u16 	%rs1711, %rs1828;
	// inline asm
	{sub.f16 %rs1710,%rs1711,%rs1707;
}
	// inline asm
	mov.u16 	%rs1830, %rs1710;
	mov.u16 	%rs1715, %rs1828;
	// inline asm
	{add.f16 %rs1713,%rs1710,%rs1715;
}
	// inline asm
	mov.u16 	%rs1827, %rs1713;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1723, %rs1827;
	mov.u16 	%rs1724, %rs1830;
	// inline asm
	{add.f16 %rs1722,%rs1723,%rs1724;
}
	// inline asm
	mov.u16 	%rs1827, %rs1722;
	mov.u16 	%rs1727, %rs1830;
	// inline asm
	{add.f16 %rs1725,%rs1722,%rs1727;
}
	// inline asm
	mov.u16 	%rs1827, %rs1725;
	mov.u16 	%rs1729, %rs1828;
	// inline asm
	{sub.f16 %rs1728,%rs1729,%rs1725;
}
	// inline asm
	mov.u16 	%rs1830, %rs1728;
	mov.u16 	%rs1733, %rs1828;
	// inline asm
	{add.f16 %rs1731,%rs1728,%rs1733;
}
	// inline asm
	mov.u16 	%rs1827, %rs1731;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1741, %rs1827;
	mov.u16 	%rs1742, %rs1830;
	// inline asm
	{add.f16 %rs1740,%rs1741,%rs1742;
}
	// inline asm
	mov.u16 	%rs1827, %rs1740;
	mov.u16 	%rs1745, %rs1830;
	// inline asm
	{add.f16 %rs1743,%rs1740,%rs1745;
}
	// inline asm
	mov.u16 	%rs1827, %rs1743;
	mov.u16 	%rs1747, %rs1828;
	// inline asm
	{sub.f16 %rs1746,%rs1747,%rs1743;
}
	// inline asm
	mov.u16 	%rs1830, %rs1746;
	mov.u16 	%rs1751, %rs1828;
	// inline asm
	{add.f16 %rs1749,%rs1746,%rs1751;
}
	// inline asm
	mov.u16 	%rs1827, %rs1749;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1759, %rs1827;
	mov.u16 	%rs1760, %rs1830;
	// inline asm
	{add.f16 %rs1758,%rs1759,%rs1760;
}
	// inline asm
	mov.u16 	%rs1827, %rs1758;
	mov.u16 	%rs1763, %rs1830;
	// inline asm
	{add.f16 %rs1761,%rs1758,%rs1763;
}
	// inline asm
	mov.u16 	%rs1827, %rs1761;
	mov.u16 	%rs1765, %rs1828;
	// inline asm
	{sub.f16 %rs1764,%rs1765,%rs1761;
}
	// inline asm
	mov.u16 	%rs1830, %rs1764;
	mov.u16 	%rs1769, %rs1828;
	// inline asm
	{add.f16 %rs1767,%rs1764,%rs1769;
}
	// inline asm
	mov.u16 	%rs1827, %rs1767;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1777, %rs1827;
	mov.u16 	%rs1778, %rs1830;
	// inline asm
	{add.f16 %rs1776,%rs1777,%rs1778;
}
	// inline asm
	mov.u16 	%rs1827, %rs1776;
	mov.u16 	%rs1781, %rs1830;
	// inline asm
	{add.f16 %rs1779,%rs1776,%rs1781;
}
	// inline asm
	mov.u16 	%rs1827, %rs1779;
	mov.u16 	%rs1783, %rs1828;
	// inline asm
	{sub.f16 %rs1782,%rs1783,%rs1779;
}
	// inline asm
	mov.u16 	%rs1830, %rs1782;
	mov.u16 	%rs1787, %rs1828;
	// inline asm
	{add.f16 %rs1785,%rs1782,%rs1787;
}
	// inline asm
	mov.u16 	%rs1827, %rs1785;
	mov.u16 	%rs1827, %rs6;
	mov.u16 	%rs1828, %rs9;
	mov.u16 	%rs1795, %rs1827;
	mov.u16 	%rs1796, %rs1830;
	// inline asm
	{add.f16 %rs1794,%rs1795,%rs1796;
}
	// inline asm
	mov.u16 	%rs1827, %rs1794;
	mov.u16 	%rs1799, %rs1830;
	// inline asm
	{add.f16 %rs1797,%rs1794,%rs1799;
}
	// inline asm
	mov.u16 	%rs1827, %rs1797;
	mov.u16 	%rs1801, %rs1828;
	// inline asm
	{sub.f16 %rs1800,%rs1801,%rs1797;
}
	// inline asm
	mov.u16 	%rs1830, %rs1800;
	mov.u16 	%rs1805, %rs1828;
	// inline asm
	{add.f16 %rs1803,%rs1800,%rs1805;
}
	// inline asm
	mov.u16 	%rs1827, %rs1803;
	add.s32 	%r21, %r21, 100;
	setp.ne.s32	%p3, %r21, 0;
	@%p3 bra 	BB1_3;

	setp.eq.s32	%p4, %r2, 0;
	mov.u32 	%r22, %r3;
	@%p4 bra 	BB1_7;

BB1_5:
	sub.s32 	%r23, %r22, %r11;
	// inline asm
	{add.f16 %rs1806,%rs1,%rs2;
}
	// inline asm
	// inline asm
	{sub.f16 %rs1809,%rs1,%rs2;
}
	// inline asm

BB1_6:
	.pragma "nounroll";
	mov.u16 	%rs1827, %rs1806;
	mov.u16 	%rs1828, %rs1809;
	mov.u16 	%rs1813, %rs1827;
	mov.u16 	%rs1814, %rs1830;
	// inline asm
	{add.f16 %rs1812,%rs1813,%rs1814;
}
	// inline asm
	mov.u16 	%rs1827, %rs1812;
	mov.u16 	%rs1817, %rs1830;
	// inline asm
	{add.f16 %rs1815,%rs1812,%rs1817;
}
	// inline asm
	mov.u16 	%rs1827, %rs1815;
	mov.u16 	%rs1819, %rs1828;
	// inline asm
	{sub.f16 %rs1818,%rs1819,%rs1815;
}
	// inline asm
	mov.u16 	%rs1830, %rs1818;
	mov.u16 	%rs1823, %rs1828;
	// inline asm
	{add.f16 %rs1821,%rs1818,%rs1823;
}
	// inline asm
	mov.u16 	%rs1827, %rs1821;
	add.s32 	%r23, %r23, 1;
	setp.ne.s32	%p5, %r23, 0;
	@%p5 bra 	BB1_6;

BB1_7:
	bar.sync 	0;
	mov.u16 	%rs1825, %rs1827;
	mov.u16 	%rs1831, %rs1825;
	mov.u16 	%rs1826, %rs1830;
	// inline asm
	{add.f16 %rs1824,%rs1825,%rs1826;
}
	// inline asm
	cvta.to.global.u64 	%rd25, %rd5;
	add.s64 	%rd27, %rd25, %rd14;
	st.global.u16 	[%rd27], %rs1824;
	ret;
}


